	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_createTableau
_createTableau:
	ld	hl, _tableau_data
	ld	de, 215
	ld	bc, 15
	push	bc
	push	de
	push	hl
	call	_gfx_RLETSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_DrawTitle
_DrawTitle:
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, -1
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 10
	push	hl
	ld	hl, 110
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str
	push	hl
	call	_gfx_PrintString
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_DrawCursor
_DrawCursor:
	ld	hl, -9
	call	__frameset
	ld	hl, 40
	ld	(ix + -6), hl
	ld	hl, -6
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld.sis	hl, 0
	ld	e, l
	ld	d, h
	ld	iy, _h
	ld	(iy), e
	ld	(iy + 1), d
	ld	hl, _i
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	iy, _l
	ld	(iy), e
	ld	(iy + 1), d
	ld	hl, _posx
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld.sis	bc, 1
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	jq	nz, BB2_2
	ld	bc, -61
	ld	(ix + -3), bc
	ld	hl, _h
	ld.sis	bc, 23
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld.sis	hl, 61
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, 14
	ld	(ix + -9), hl
	jq	BB2_7
BB2_2:
	ld	iy, _h
	ld.sis	bc, 2
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	jq	nz, BB2_6
	ld.sis	hl, 23
	ld	c, l
	ld	b, h
	ld	(iy), c
	ld	(iy + 1), b
	ld	hl, _l
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	hl, _posy
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	iyl, e
	ld	iyh, d
	pop	de
	ld.sis	bc, 5
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	or	a, a
	sbc.sis	hl, bc
	jq	z, BB2_5
	ld.sis	bc, 8
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	or	a, a
	sbc.sis	hl, bc
	jq	nz, BB2_8
BB2_5:
	ld.sis	hl, 28
	ld	bc, 42
	ld	(ix + -9), bc
	ld	iy, _i
	ld	(iy), l
	ld	(iy + 1), h
	jq	BB2_9
BB2_6:
	ld	hl, 17
	ld	(ix + -6), hl
	ld	hl, 14
	ld	(ix + -9), hl
	or	a, a
	sbc	hl, hl
	ld	(ix + -3), hl
BB2_7:
	ld	bc, 18
	jq	BB2_10
BB2_8:
	ld	hl, 14
	ld	(ix + -9), hl
BB2_9:
	ld	bc, 18
	ld	hl, -23
	ld	(ix + -3), hl
BB2_10:
	ld	iy, 0
	ld	iyl, e
	ld	iyh, d
	lea	hl, iy + 0
	call	__imulu
	ld	de, 203
	add	hl, de
	ex	de, hl
	ld	hl, (ix + -3)
	add	hl, de
	ld	(ix + -3), hl
	ld	hl, _posy
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	iyl, e
	ld	iyh, d
	pop	de
	lea	hl, iy + 0
	ld	bc, 14
	call	__imulu
	inc	hl
	ld	de, (ix + -9)
	push	de
	ld	de, (ix + -6)
	push	de
	push	hl
	ld	hl, (ix + -3)
	push	hl
	call	_gfx_FillRectangle
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_PrintNumber
_PrintNumber:
	ld	bc, 56
	ld	hl, 200
	ld	iy, 50
	ld	de, 30
	push	de
	push	iy
	push	hl
	push	bc
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 3
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 200
	push	hl
	ld	hl, 56
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	a, (_c)
	ld	l, a
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (_e)
	ld	de, 2
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_DrawButtons
_DrawButtons:
	ld	hl, -2
	push	hl
	call	_gfx_SetColor
	ld.sis	bc, 0
	pop	hl
	ld.sis	de, 7
BB4_1:
	ld	hl, _k
	ld	(hl), c
	inc	hl
	ld	(hl), b
	ld	l, c
	ld	h, b
	or	a, a
	sbc.sis	hl, de
	jq	nc, BB4_3
	or	a, a
	sbc	hl, hl
	ld	l, c
	ld	h, b
	ld	bc, 14
	call	__imulu
	ld	de, 57
	add	hl, de
	ld	de, 15
	push	de
	ld	de, 41
	push	de
	push	hl
	ld	hl, 160
	push	hl
	call	_gfx_Rectangle
	ld.sis	de, 7
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _k
	ld	c, (hl)
	inc	hl
	ld	b, (hl)
	inc.sis	bc
	jq	BB4_1
BB4_3:
	ld	hl, -2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, -1
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 61
	push	hl
	ld	hl, 165
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.1
	push	hl
	call	_gfx_PrintString
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -2
	call	__frameset
	ld.sis	bc, 4
	ld	iy, _posx
	ld.sis	de, 1
	ld	hl, _posy
	ld	(iy), c
	ld	(iy + 1), b
	ld	(hl), e
	inc	hl
	ld	(hl), d
	call	_gfx_Begin
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 510
	push	hl
	ld	hl, _palette_gfx
	push	hl
	call	_gfx_SetPalette
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 0
	ld	iy, _s
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	bc, (_rotate_sprite)
	ld	a, (_a)
	ld	l, a
	ld	a, (_s)
	ld	e, a
	ld	a, l
	add	a, e
	ld	l, a
	ld	de, 64
	push	de
	push	hl
	push	bc
	ld	hl, _ro_data
	push	hl
	call	_gfx_RotateScaleSprite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -3
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_DrawTitle
	ld	hl, (_rotate_sprite)
	ld	de, 69
	push	de
	ld	de, 17
	push	de
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	ld	hl, 59
	push	hl
	ld	hl, _pfeil_data
	push	hl
	call	_gfx_RLETSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	call	_createTableau
	call	_DrawButtons
	call	_gfx_SwapDraw
	ld	hl, -3
	push	hl
	call	_gfx_FillScreen
	pop	hl
BB5_1:
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 64
	jq	nz, BB5_10
BB5_2:
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 64
	jq	z, BB5_63
	ld	hl, -851900
	push	hl
	pop	iy
	ld	hl, (iy)
	ld	a, (iy + 3)
	push	hl
	call	_srand
	pop	hl
	call	_DrawCursor
	call	_createTableau
	call	_DrawButtons
	ld.sis	hl, -15536
	ld	iy, _b
	ld	(iy), l
	ld	(iy + 1), h
	call	_rand
	ld	bc, 256
	call	__irems
	ld	iy, _s
	ld	(iy), l
	ld	(iy + 1), h
	ld.sis	de, 0
	ld	hl, _f
	ld	(hl), e
	inc	hl
	ld	(hl), d
BB5_4:
	or	a, a
	ld	l, e
	ld	h, d
	ld.sis	bc, 1
	adc.sis	hl, bc
	ld	iy, _x
	ld	(iy), l
	ld	(iy + 1), h
	or	a, a
	ld	l, e
	ld	h, d
	adc.sis	hl, bc
	jq	c, BB5_20
	call	_kb_Scan
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 64
	jq	z, BB5_62
	call	_rand
	ld	bc, 1000
	call	__irems
	push	hl
	pop	de
	ld	hl, _b
	push	hl
	pop	iy
	ld	l, (iy)
	ld	h, (iy + 1)
	or	a, a
	sbc.sis	hl, de
	ld	e, l
	ld	d, h
	ld	(iy), e
	ld	(iy + 1), d
	ld	a, (_a)
	ld.sis	bc, 5000
	call	__sdivu
	add	a, l
	ld	c, a
	ld	(_a), a
	ld	l, e
	ld	h, d
	ld.sis	de, 2000
	or	a, a
	sbc.sis	hl, de
	jq	c, BB5_20
	ld	a, (_s)
	ld	l, a
	ld	a, c
	add	a, l
	ld	l, a
	ld	(_n), a
	ld	de, (_rotate_sprite)
	ld	bc, 64
	push	bc
	push	hl
	push	de
	ld	hl, _ro_data
	push	hl
	call	_gfx_RotateScaleSprite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	pop	hl
	call	_DrawTitle
	ld	hl, (_rotate_sprite)
	ld	de, 69
	push	de
	ld	de, 17
	push	de
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	ld	hl, 59
	push	hl
	ld	hl, _pfeil_data
	push	hl
	call	_gfx_RLETSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
	ld	a, (_n)
	ld	b, a
	ld	c, 7
	call	__bdivu
	ld	bc, 0
	push	bc
	pop	de
	ld	e, a
	ld	hl, L___const.main.colors
	add	hl, de
	ld	a, (hl)
	push	bc
	pop	hl
	ld	l, a
	ld	(_c), hl
	ld	hl, L___const.main.numbers
	add	hl, de
	ld	a, (hl)
	push	bc
	pop	hl
	ld	l, a
	ld	(_e), hl
	call	_PrintNumber
	ld	hl, _x
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	jq	BB5_4
BB5_10:
	call	_kb_Scan
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 220
	push	hl
	ld	hl, 155
	push	hl
	ld	hl, 10
	push	hl
	ld	hl, 160
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	call	_DrawTitle
	call	_PrintNumber
	call	_DrawCursor
	call	_createTableau
	call	_DrawButtons
	ld	hl, (_rotate_sprite)
	ld	de, 69
	push	de
	ld	de, 17
	push	de
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	ld	hl, 59
	push	hl
	ld	hl, _pfeil_data
	push	hl
	call	_gfx_RLETSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	iy, -720866
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 8
	jq	nz, BB5_15
	ld	hl, _posy
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	ld.sis	bc, 2
	or	a, a
	sbc.sis	hl, bc
	jq	c, BB5_15
	ld	l, e
	ld	h, d
	ld.sis	bc, 4
	or	a, a
	sbc.sis	hl, bc
	jq	nz, BB5_14
	ld	hl, _posx
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 1
	or	a, a
	sbc.sis	hl, bc
	jq	z, BB5_15
BB5_14:
	dec.sis	de
	ld	hl, _posy
	ld	(hl), e
	inc	hl
	ld	(hl), d
BB5_15:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 1
	jq	nz, BB5_32
	ld	hl, _posx
	ld	c, (hl)
	inc	hl
	ld	b, (hl)
	ld	hl, _posy
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	iyl, e
	ld	iyh, d
	pop	de
	ld	l, c
	ld	h, b
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB5_22
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 4
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB5_22
	ld	hl, _posy
	ld.sis	de, 5
	jq	BB5_19
BB5_20:
	ld	hl, _f
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	de, 1
	or	a, a
	sbc.sis	hl, de
	jq	z, BB5_63
	call	_DrawTitle
	ld	hl, (_rotate_sprite)
	ld	a, (_n)
	ld	e, a
	ld	bc, 64
	push	bc
	push	de
	push	hl
	ld	hl, _ro_data
	push	hl
	call	_gfx_RotateScaleSprite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_rotate_sprite)
	ld	de, 69
	push	de
	ld	de, 17
	push	de
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	ld	hl, 59
	push	hl
	ld	hl, _pfeil_data
	push	hl
	call	_gfx_RLETSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	call	_DrawCursor
	call	_createTableau
	call	_DrawButtons
	call	_gfx_SwapDraw
	jq	BB5_1
BB5_22:
	ld	l, c
	ld	h, b
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB5_25
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 5
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB5_25
	ld	hl, _posy
	ld.sis	de, 8
	jq	BB5_19
BB5_25:
	ld	l, c
	ld	h, b
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB5_28
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 8
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB5_28
	ld	hl, _posy
	ld.sis	de, 11
BB5_19:
	ld	(hl), e
	inc	hl
	ld	(hl), d
	jq	BB5_32
BB5_28:
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 14
	or	a, a
	sbc.sis	hl, de
	jq	nc, BB5_32
	ld	l, c
	ld	h, b
	ld.sis	bc, 1
	or	a, a
	sbc.sis	hl, bc
	jq	nz, BB5_31
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 10
	or	a, a
	sbc.sis	hl, de
	jq	z, BB5_32
BB5_31:
	inc.sis	iy
	ld	hl, _posy
	push	de
	ld	e, iyl
	ld	d, iyh
	ld	(hl), e
	inc	hl
	ld	(hl), d
	pop	de
BB5_32:
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 2
	jq	nz, BB5_39
	ld	hl, _posx
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	iyl, e
	ld	iyh, d
	pop	de
	ld	hl, _posy
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	ld.sis	bc, -2
	call	__sand
	ld	(ix + -2), l
	ld	(ix + -1), h
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, 2
	or	a, a
	sbc.sis	hl, bc
	jq	nz, BB5_37
	ld	l, e
	ld	h, d
	ld.sis	de, 8
	or	a, a
	sbc.sis	hl, de
	jq	z, BB5_36
	ld	l, (ix + -2)
	ld	h, (ix + -1)
	ld.sis	de, 4
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB5_37
BB5_36:
	ld.sis	hl, 1
	ld	iy, _posx
	ld	(iy), l
	ld	(iy + 1), h
	jq	BB5_39
BB5_37:
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 3
	or	a, a
	sbc.sis	hl, de
	jq	c, BB5_39
	dec.sis	iy
	ld	hl, _posx
	push	de
	ld	e, iyl
	ld	d, iyh
	ld	(hl), e
	inc	hl
	ld	(hl), d
	pop	de
BB5_39:
	ld	hl, -720866
	ld	c, (hl)
	inc	hl
	ld	b, (hl)
	ld	hl, _posx
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	a, c
	cp	a, 4
	jq	nz, BB5_44
	ld	l, e
	ld	h, d
	ld.sis	bc, 5
	or	a, a
	sbc.sis	hl, bc
	jq	nc, BB5_44
	inc.sis	de
	ld	hl, _posx
	ld	(hl), e
	inc	hl
	ld	(hl), d
BB5_44:
	ld	hl, -720878
	ld	c, (hl)
	inc	hl
	ld	b, (hl)
	ld	hl, _posy
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	iyl, e
	ld	iyh, d
	pop	de
	ld	a, c
	cp	a, 32
	jq	nz, BB5_47
	ld	l, e
	ld	h, d
	ld.sis	bc, 1
	or	a, a
	sbc.sis	hl, bc
	jq	nz, BB5_47
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, 4
	or	a, a
	sbc.sis	hl, bc
	jq	z, BB5_2
BB5_47:
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, 1
	or	a, a
	sbc.sis	hl, bc
	jq	nz, BB5_52
	ld	l, e
	ld	h, d
	ld.sis	bc, 5
	or	a, a
	sbc.sis	hl, bc
	jq	z, BB5_50
	ld	l, e
	ld	h, d
	dec.sis	hl
	ld.sis	bc, 3
	or	a, a
	sbc.sis	hl, bc
	jq	nc, BB5_52
BB5_50:
	ld.sis	de, 4
	ld	hl, _posx
	ld	(hl), e
	inc	hl
	ld	(hl), d
BB5_52:
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, -2
	call	__sand
	ld.sis	bc, 6
	or	a, a
	sbc.sis	hl, bc
	jq	nz, BB5_54
	ld	l, e
	ld	h, d
	ld.sis	bc, 2
	or	a, a
	sbc.sis	hl, bc
	ld.sis	bc, 5
	jq	z, BB5_56
BB5_54:
	ld.sis	bc, -9
	add.sis	iy, bc
	ld	l, e
	ld	h, d
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB5_57
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	ld.sis	bc, 8
	jq	nc, BB5_57
BB5_56:
	ld	hl, _posy
	ld	(hl), c
	inc	hl
	ld	(hl), b
BB5_57:
	call	_gfx_SwapDraw
	ld.sis	hl, 0
BB5_58:
	ld	iy, _x
	ld	(iy), l
	ld	(iy + 1), h
	ld.sis	de, 26
	or	a, a
	sbc.sis	hl, de
	jq	nc, BB5_1
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	pop	hl
	call	_kb_Scan
	call	_DrawTitle
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 32
	jq	z, BB5_1
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 64
	jq	z, BB5_1
	ld	hl, _x
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	inc.sis	hl
	jq	BB5_58
BB5_62:
	ld.sis	hl, 1
	ld	iy, _f
	ld	(iy), l
	ld	(iy + 1), h
BB5_63:
	ld	sp, ix
	pop	ix
	jp	_gfx_End
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_rotate_sprite_data
_rotate_sprite_data:
	rb	13691

	section	.data,"aw",@progbits
	public	_rotate_sprite
_rotate_sprite:
	dl	_rotate_sprite_data

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"Roulette v0.2.3",000o

	section	.bss,"aw",@nobits
	public	_h
_h:
	rb	2

	section	.bss,"aw",@nobits
	public	_i
_i:
	rb	2

	section	.bss,"aw",@nobits
	public	_l
_l:
	rb	2

	section	.bss,"aw",@nobits
	public	_posx
_posx:
	rb	2

	section	.bss,"aw",@nobits
	public	_posy
_posy:
	rb	2

	section	.bss,"aw",@nobits
	public	_c
_c:
	rb	3

	section	.bss,"aw",@nobits
	public	_e
_e:
	rb	3

	section	.bss,"aw",@nobits
	public	_k
_k:
	rb	2

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"Spin",000o

	section	.rodata,"a",@progbits
	private	L___const.main.colors
L___const.main.colors:
	db	"",376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,376o,374o,373o

	section	.rodata,"a",@progbits
	private	L___const.main.numbers
L___const.main.numbers:
	db	"",032o,003o,"#",014o,034o,007o,035o,022o,026o,011o,037o,016o,024o,001o,"!",020o,030o,005o,012o,027o,010o,036o,013o,"$",015o,033o,006o,"""",021o,031o,002o,025o,004o,023o,017o," ",000o

	section	.bss,"aw",@nobits
	public	_s
_s:
	rb	2

	section	.bss,"aw",@nobits
	public	_a
_a:
	rb	1

	section	.bss,"aw",@nobits
	public	_x
_x:
	rb	2

	section	.bss,"aw",@nobits
	public	_b
_b:
	rb	2

	section	.bss,"aw",@nobits
	public	_f
_f:
	rb	2

	section	.bss,"aw",@nobits
	public	_n
_n:
	rb	1

	section	.bss,"aw",@nobits
	public	_y
_y:
	rb	2

	section	.bss,"aw",@nobits
	public	_z
_z:
	rb	2

	section	.bss,"aw",@nobits
	public	_g
_g:
	rb	2

	section	.bss,"aw",@nobits
	public	_j
_j:
	rb	2

	section	.bss,"aw",@nobits
	public	_key
_key:
	rb	1

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_srand
	extern	_gfx_SetTextBGColor
	extern	_gfx_SetTextFGColor
	extern	_gfx_Begin
	extern	_kb_Scan
	extern	_gfx_RotateScaleSprite
	extern	_palette_gfx
	extern	_gfx_SetPalette
	extern	_rand
	extern	_gfx_RLETSprite_NoClip
	extern	__sand
	extern	_gfx_PrintString
	extern	_gfx_SwapDraw
	extern	_gfx_PrintInt
	extern	_gfx_SetDraw
	extern	_pfeil_data
	extern	__sdivu
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	__irems
	extern	_gfx_FillRectangle
	extern	__imulu
	extern	_gfx_SetColor
	extern	_tableau_data
	extern	_gfx_Rectangle
	extern	_gfx_TransparentSprite_NoClip
	extern	_gfx_End
	extern	_gfx_SetTextXY
	extern	_ro_data
	extern	__bdivu
	extern	_gfx_SetTextScale
