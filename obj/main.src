; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optspeed -noreduceopt -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\MAIN.C"
	.assume ADL=1
	SEGMENT BSS
_rotate_sprite_data:
	DS	16386
	SEGMENT DATA
_rotate_sprite:
	DW24	_rotate_sprite_data
	SEGMENT BSS
_a:
	DS	2*1
_b:
	DS	2*1
_n:
	DS	3
_keypressed:
	DS	3
_e:
	DS	3
_c:
	DS	3
_stop:
	DS	1
_prevkey:
	DS	1
_key:
	DS	1
;    1	#include <stdbool.h>
;    2	#include <stddef.h>
;    3	#include <stdint.h>
;    4	#include <tice.h>
;    5	
;    6	#include <math.h>
;    7	#include <stdio.h>
;    8	#include <stdlib.h>
;    9	#include <string.h>
;   10	
;   11	#include <keypadc.h>
;   12	#include <graphx.h>
;   13	#include <debug.h>
;   14	
;   15	#include "gfx/palette_gfx.h"
;   16	
;   17	
;   18	gfx_UninitedSprite(rotate_sprite, ro_width, ro_height);//sprite buffer
;   19	
;   20	uint16_t a, b;
;   21	int n, keypressed,e ,c;
;   22	uint8_t stop;
;   23	bool prevkey;
;   24	kb_key_t key;
	SEGMENT CODE
;   25	
;   26	
;   27	void main(void)
;   28	{
_main:
	LD	HL,-10
	CALL	__frameset
;   29	    uint16_t k, x, s, i;
;   30		
;   31	    gfx_Begin(); //Start the graphics 
	CALL	_gfx_Begin
;   32	    gfx_SetPalette(palette_gfx_pal, sizeof_palette_gfx_pal, 0); //Load Palette
	LD	BC,0
	PUSH	BC
	LD	BC,500
	PUSH	BC
	LD	BC,_palette_gfx_pal
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;   33		s = 0;
	LD	(IX+-4),0
	LD	(IX+-3),0
;   34		gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   35		gfx_RotateSprite(ro, rotate_sprite, a + s);//Rotate the sprite
	LD	A,(_a)
	LD	C,A
	LD	DE,64
	PUSH	DE
	LD	B,0
	PUSH	BC
	LD	BC,(_rotate_sprite)
	PUSH	BC
	LD	BC,_ro_data
	PUSH	BC
	CALL	_gfx_RotateScaleSprite
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   36		gfx_FillScreen(9);//Green background
	LD	BC,9
	PUSH	BC
	CALL	_gfx_FillScreen
	POP	BC
;   37		gfx_SetTextFGColor(249);//Black text color
	LD	BC,249
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   38		gfx_SetTextBGColor(255);//Transparent text background
	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetTextBGColor
	POP	BC
;   39		gfx_SetTextScale(1,1);//Text size for Title
	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;   40		gfx_SetTextXY(110,10);//Title position
	LD	BC,10
	PUSH	BC
	LD	BC,110
	PUSH	BC
	CALL	_gfx_SetTextXY
	POP	BC
	POP	BC
;   41		gfx_PrintString("Roulette v0.1.1");//Print title
	LD	BC,L__0
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
;   42		gfx_SetTextXY(49,228);//Text position
	LD	BC,228
	PUSH	BC
	LD	BC,49
	PUSH	BC
	CALL	_gfx_SetTextXY
	POP	BC
	POP	BC
;   43				gfx_PrintString("Press 2nd to spin or Clear to exit");//Print text
	LD	BC,L__1
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
;   44		gfx_TransparentSprite_NoClip(rotate_sprite, 12, 64);//Show rotated sprite
	LD	BC,64
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,(_rotate_sprite)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;   45		gfx_TransparentSprite_NoClip(pfeil, 59, 36);//Show arrow
	LD	BC,36
	PUSH	BC
	LD	BC,59
	PUSH	BC
	LD	BC,_pfeil_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;   46		gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   47		
;   48		for (i = 0; ++i;) //Loop everything
	LD	(IX+-7),0
	LD	(IX+-6),0
	JR	L_129
;   49		{
;   50			while (kb_Data[1] != kb_Clear && kb_Data[1] != kb_2nd); //Wait for key press
L_2:
	LD	A,(16056338)
	CP	A,64
	JR	NZ,L__3
	LD	A,1
	JR	L__4
L__3:
	XOR	A,A
L__4:
	LD	(IX+-5),A
	OR	A,A
	JR	NZ,L_4
	LD	A,(16056338)
	CP	A,32
	JR	NZ,L_2
L_4:
;   51			if (kb_Data[1] == kb_Clear) {break;}//Exit
	LD	A,(IX+-5)
	OR	A,A
	JR	NZ,L_130
;   52		
;   53			srand(rtc_Time());//Set random seed
	LD	BC,(15925316)
	PUSH	BC
	CALL	_srand
	POP	BC
;   54	    
;   55			/*Generate random amount to rotate*/
;   56			b = 50000;
	LD	HL,_b
	LD	(HL),80
	INC	HL
	LD	(HL),195
;   57			s = rand() % 256;
	CALL	_rand
	LD	BC,256
	CALL	__irems
	LD	(IX+-4),L
	LD	(IX+-3),H
;   58			for (x = 0; ++x;)
	LD	(IX+-2),0
	LD	(IX+-1),0
	JR	L_12
L_10:
;   59			{
;   60				int r = rand() % 1000;
	CALL	_rand
	LD	BC,1000
	CALL	__irems
	LD	(IX+-10),HL
;   61				b = b - r;
	LD	BC,HL
	LD	HL,(_b)
	OR	A,A
	SBC.SIS	HL,BC
	LD	BC,HL
	LD	HL,_b
	LD	(HL),C
	INC	HL
	LD	(HL),B
;   62				a = a + b / 5000;
	LD	BC,(_b)
	CALL	__stoiu
	LD	BC,5000
	CALL	__idivs
	LD	BC,(_a)
	ADD.SIS	HL,BC
	LD	BC,HL
	LD	HL,_a
	LD	(HL),C
	INC	HL
	LD	(HL),B
;   63				if (b / 2000 < 1)
	LD	BC,(_b)
	CALL	__stoiu
	LD	BC,2000
	CALL	__idivs
	OR	A,A
	LD	BC,1
	SBC	HL,BC
	JP	M,L_14
;   64				{
;   65					break;
;   66				}
;   67				n = a + s;
	LD	BC,(_a)
	CALL	__stoiu
	LD	DE,HL
	LD	BC,(IX+-4)
	CALL	__stoiu
	ADD	HL,DE
	LD	(_n),HL
;   68				
;   69				/*Keep rotation value below 256*/
;   70				if (a > 255)
	LD	BC,(_a)
	LD.LIS	HL,255
	OR	A,A
	SBC.SIS	HL,BC
	JR	NC,L_9
;   71				{
;   72					a = a - 256;
	LD	HL,(_a)
	LD.LIS	DE,256
	OR	A,A
	SBC.SIS	HL,DE
	LD	BC,HL
	LD	HL,_a
	LD	(HL),C
	INC	HL
	LD	(HL),B
;   73				}
L_9:
;   74				/*Keep rotation value below 256*/
;   75			
;   76				/*Generate random amount to rotate*/
;   77		
;   78				gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   79				gfx_RotateSprite(ro, rotate_sprite, a + s);//Rotate the sprite
	LD	A,(_a)
	LD	BC,64
	PUSH	BC
	LD	B,(IX+-4)
	ADD	A,B
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,(_rotate_sprite)
	PUSH	BC
	LD	BC,_ro_data
	PUSH	BC
	CALL	_gfx_RotateScaleSprite
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   80				gfx_FillScreen(9);//Green background
	LD	BC,9
	PUSH	BC
	CALL	_gfx_FillScreen
	POP	BC
;   81				gfx_SetTextFGColor(249);//Black text color
	LD	BC,249
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   82				gfx_SetTextBGColor(255);//Transparent text background
	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetTextBGColor
	POP	BC
;   83				gfx_SetTextScale(1,1);//Text size for Title
	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;   84				gfx_SetTextXY(110,10);//Title position
	LD	BC,10
	PUSH	BC
	LD	BC,110
	PUSH	BC
	CALL	_gfx_SetTextXY
	POP	BC
	POP	BC
;   85				gfx_PrintString("Roulette v0.1.1");//Print title
	LD	BC,L__10
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
;   86		
;   87				gfx_TransparentSprite_NoClip(rotate_sprite, 12, 64);//Show rotated sprite
	LD	BC,64
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,(_rotate_sprite)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;   88				gfx_TransparentSprite_NoClip(pfeil, 59, 36);//Show arrow
	LD	BC,36
	PUSH	BC
	LD	BC,59
	PUSH	BC
	LD	BC,_pfeil_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;   89				gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   90			}
L_12:
	LD	HL,(IX+-2)
	INC	HL
	LD	(IX+-2),L
	LD	(IX+-1),H
	LD	HL,(IX+-2)
	CALL	__scmpzero
	JR	NZ,L_10
L_14:
;   91		
;   92			/*Keep rotation value below 256*/
;   93			if (n > 255)
	LD	BC,(_n)
	LD	HL,255
	OR	A,A
	SBC	HL,BC
	JP	P,L__90
	JP	PE,L_17
	JR	L__91
L__90:
	JP	PO,L_17
L__91:
;   94			{
;   95				n = n - 256;
	LD	HL,(_n)
	LD	BC,16776960
	ADD	HL,BC
	LD	(_n),HL
;   96			}
L_17:
;   97			/*Keep rotation value below 256*/
;   98		
;   99			/*Determine number*/
;  100			if(n >= 0 && n < 7){e = 26; c = 249;}
	LD	BC,0
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__92
	JP	PE,L_20
	JR	L__93
L__92:
	JP	PO,L_20
L__93:
	LD	BC,7
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__94
	JP	PE,L_20
	JR	L__95
L__94:
	JP	PO,L_20
L__95:
	LD	BC,26
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_20:
;  101			if(n >= 7 && n < 14){e = 3;  c = 1;}
	LD	BC,7
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__96
	JP	PE,L_23
	JR	L__97
L__96:
	JP	PO,L_23
L__97:
	LD	BC,14
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__98
	JP	PE,L_23
	JR	L__99
L__98:
	JP	PO,L_23
L__99:
	LD	BC,3
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_23:
;  102			if(n >= 14 && n < 20){e = 35; c = 249;}
	LD	BC,14
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__100
	JP	PE,L_26
	JR	L__101
L__100:
	JP	PO,L_26
L__101:
	LD	BC,20
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__102
	JP	PE,L_26
	JR	L__103
L__102:
	JP	PO,L_26
L__103:
	LD	BC,35
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_26:
;  103			if(n >= 20 && n < 28){e = 12; c = 1;}
	LD	BC,20
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__104
	JP	PE,L_29
	JR	L__105
L__104:
	JP	PO,L_29
L__105:
	LD	BC,28
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__106
	JP	PE,L_29
	JR	L__107
L__106:
	JP	PO,L_29
L__107:
	LD	BC,12
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_29:
;  104			if(n >= 28 && n < 35){e = 28; c = 249;}
	LD	BC,28
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__108
	JP	PE,L_32
	JR	L__109
L__108:
	JP	PO,L_32
L__109:
	LD	BC,35
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__110
	JP	PE,L_32
	JR	L__111
L__110:
	JP	PO,L_32
L__111:
	LD	BC,28
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_32:
;  105			if(n >= 35 && n < 42){e = 7; c = 1;}
	LD	BC,35
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__112
	JP	PE,L_35
	JR	L__113
L__112:
	JP	PO,L_35
L__113:
	LD	BC,42
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__114
	JP	PE,L_35
	JR	L__115
L__114:
	JP	PO,L_35
L__115:
	LD	BC,7
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_35:
;  106			if(n >= 42 && n < 48){e = 29; c = 249;}
	LD	BC,42
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__116
	JP	PE,L_38
	JR	L__117
L__116:
	JP	PO,L_38
L__117:
	LD	BC,48
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__118
	JP	PE,L_38
	JR	L__119
L__118:
	JP	PO,L_38
L__119:
	LD	BC,29
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_38:
;  107			if(n >= 48 && n < 55){e = 18; c = 1;}
	LD	BC,48
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__120
	JP	PE,L_41
	JR	L__121
L__120:
	JP	PO,L_41
L__121:
	LD	BC,55
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__122
	JP	PE,L_41
	JR	L__123
L__122:
	JP	PO,L_41
L__123:
	LD	BC,18
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_41:
;  108			if(n >= 55 && n < 62){e = 22; c = 249;}
	LD	BC,55
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__124
	JP	PE,L_44
	JR	L__125
L__124:
	JP	PO,L_44
L__125:
	LD	BC,62
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__126
	JP	PE,L_44
	JR	L__127
L__126:
	JP	PO,L_44
L__127:
	LD	BC,22
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_44:
;  109			if(n >= 62 && n < 69){e = 9; c = 1;}
	LD	BC,62
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__128
	JP	PE,L_47
	JR	L__129
L__128:
	JP	PO,L_47
L__129:
	LD	BC,69
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__130
	JP	PE,L_47
	JR	L__131
L__130:
	JP	PO,L_47
L__131:
	LD	BC,9
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_47:
;  110			if(n >= 69 && n < 76){e = 31; c = 249;}
	LD	BC,69
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__132
	JP	PE,L_50
	JR	L__133
L__132:
	JP	PO,L_50
L__133:
	LD	BC,76
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__134
	JP	PE,L_50
	JR	L__135
L__134:
	JP	PO,L_50
L__135:
	LD	BC,31
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_50:
;  111			if(n >= 76 && n < 83){e = 14; c = 1;}
	LD	BC,76
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__136
	JP	PE,L_53
	JR	L__137
L__136:
	JP	PO,L_53
L__137:
	LD	BC,83
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__138
	JP	PE,L_53
	JR	L__139
L__138:
	JP	PO,L_53
L__139:
	LD	BC,14
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_53:
;  112			if(n >= 83 && n < 90){e = 20; c = 249;}
	LD	BC,83
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__140
	JP	PE,L_56
	JR	L__141
L__140:
	JP	PO,L_56
L__141:
	LD	BC,90
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__142
	JP	PE,L_56
	JR	L__143
L__142:
	JP	PO,L_56
L__143:
	LD	BC,20
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_56:
;  113			if(n >= 90 && n < 97){e = 1; c = 1;}
	LD	BC,90
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__144
	JP	PE,L_59
	JR	L__145
L__144:
	JP	PO,L_59
L__145:
	LD	BC,97
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__146
	JP	PE,L_59
	JR	L__147
L__146:
	JP	PO,L_59
L__147:
	LD	BC,1
	LD	(_e),BC
	LD	(_c),BC
L_59:
;  114			if(n >= 97 && n < 104){e = 33; c = 249;}
	LD	BC,97
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__148
	JP	PE,L_62
	JR	L__149
L__148:
	JP	PO,L_62
L__149:
	LD	BC,104
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__150
	JP	PE,L_62
	JR	L__151
L__150:
	JP	PO,L_62
L__151:
	LD	BC,33
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_62:
;  115			if(n >= 104 && n < 111){e = 16; c = 1;}
	LD	BC,104
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__152
	JP	PE,L_65
	JR	L__153
L__152:
	JP	PO,L_65
L__153:
	LD	BC,111
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__154
	JP	PE,L_65
	JR	L__155
L__154:
	JP	PO,L_65
L__155:
	LD	BC,16
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_65:
;  116			if(n >= 111 && n < 118){e = 24; c = 249;}
	LD	BC,111
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__156
	JP	PE,L_68
	JR	L__157
L__156:
	JP	PO,L_68
L__157:
	LD	BC,118
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__158
	JP	PE,L_68
	JR	L__159
L__158:
	JP	PO,L_68
L__159:
	LD	BC,24
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_68:
;  117			if(n >= 118 && n < 125){e = 5; c = 1;}
	LD	BC,118
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__160
	JP	PE,L_71
	JR	L__161
L__160:
	JP	PO,L_71
L__161:
	LD	BC,125
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__162
	JP	PE,L_71
	JR	L__163
L__162:
	JP	PO,L_71
L__163:
	LD	BC,5
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_71:
;  118			if(n >= 125 && n < 131){e = 10; c = 249;}
	LD	BC,125
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__164
	JP	PE,L_74
	JR	L__165
L__164:
	JP	PO,L_74
L__165:
	LD	BC,131
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__166
	JP	PE,L_74
	JR	L__167
L__166:
	JP	PO,L_74
L__167:
	LD	BC,10
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_74:
;  119			if(n >= 131 && n < 138){e = 23; c = 1;}
	LD	BC,131
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__168
	JP	PE,L_77
	JR	L__169
L__168:
	JP	PO,L_77
L__169:
	LD	BC,138
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__170
	JP	PE,L_77
	JR	L__171
L__170:
	JP	PO,L_77
L__171:
	LD	BC,23
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_77:
;  120			if(n >= 138 && n < 145){e = 8; c = 249;}
	LD	BC,138
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__172
	JP	PE,L_80
	JR	L__173
L__172:
	JP	PO,L_80
L__173:
	LD	BC,145
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__174
	JP	PE,L_80
	JR	L__175
L__174:
	JP	PO,L_80
L__175:
	LD	BC,8
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_80:
;  121			if(n >= 145 && n < 152){e = 30; c = 1;}
	LD	BC,145
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__176
	JP	PE,L_83
	JR	L__177
L__176:
	JP	PO,L_83
L__177:
	LD	BC,152
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__178
	JP	PE,L_83
	JR	L__179
L__178:
	JP	PO,L_83
L__179:
	LD	BC,30
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_83:
;  122			if(n >= 152 && n < 159){e = 11; c = 249;}
	LD	BC,152
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__180
	JP	PE,L_86
	JR	L__181
L__180:
	JP	PO,L_86
L__181:
	LD	BC,159
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__182
	JP	PE,L_86
	JR	L__183
L__182:
	JP	PO,L_86
L__183:
	LD	BC,11
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_86:
;  123			if(n >= 159 && n < 166){e = 36; c = 1;}
	LD	BC,159
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__184
	JP	PE,L_89
	JR	L__185
L__184:
	JP	PO,L_89
L__185:
	LD	BC,166
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__186
	JP	PE,L_89
	JR	L__187
L__186:
	JP	PO,L_89
L__187:
	LD	BC,36
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_89:
;  124			if(n >= 166 && n < 173){e = 13; c = 249;}
	LD	BC,166
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__188
	JP	PE,L_92
	JR	L__189
L__188:
	JP	PO,L_92
L__189:
	LD	BC,173
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__190
	JP	PE,L_92
	JR	L__191
L__190:
	JP	PO,L_92
L__191:
	LD	BC,13
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_92:
;  125			if(n >= 173 && n < 180){e = 27; c = 1;}
	LD	BC,173
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__192
	JP	PE,L_95
	JR	L__193
L__192:
	JP	PO,L_95
L__193:
	LD	BC,180
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__194
	JP	PE,L_95
	JR	L__195
L__194:
	JP	PO,L_95
L__195:
	LD	BC,27
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_95:
;  126			if(n >= 180 && n < 187){e = 6; c = 249;}
	LD	BC,180
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__196
	JP	PE,L_98
	JR	L__197
L__196:
	JP	PO,L_98
L__197:
	LD	BC,187
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__198
	JP	PE,L_98
	JR	L__199
L__198:
	JP	PO,L_98
L__199:
	LD	BC,6
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_98:
;  127			if(n >= 187 && n < 194){e = 34; c = 1;}
	LD	BC,187
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__200
	JP	PE,L_101
	JR	L__201
L__200:
	JP	PO,L_101
L__201:
	LD	BC,194
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__202
	JP	PE,L_101
	JR	L__203
L__202:
	JP	PO,L_101
L__203:
	LD	BC,34
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_101:
;  128			if(n >= 194 && n < 201){e = 17; c = 249;}
	LD	BC,194
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__204
	JP	PE,L_104
	JR	L__205
L__204:
	JP	PO,L_104
L__205:
	LD	BC,201
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__206
	JP	PE,L_104
	JR	L__207
L__206:
	JP	PO,L_104
L__207:
	LD	BC,17
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_104:
;  129			if(n >= 201 && n < 208){e = 25; c = 1;}
	LD	BC,201
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__208
	JP	PE,L_107
	JR	L__209
L__208:
	JP	PO,L_107
L__209:
	LD	BC,208
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__210
	JP	PE,L_107
	JR	L__211
L__210:
	JP	PO,L_107
L__211:
	LD	BC,25
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_107:
;  130			if(n >= 208 && n < 214){e = 2; c = 249;}
	LD	BC,208
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__212
	JP	PE,L_110
	JR	L__213
L__212:
	JP	PO,L_110
L__213:
	LD	BC,214
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__214
	JP	PE,L_110
	JR	L__215
L__214:
	JP	PO,L_110
L__215:
	LD	BC,2
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_110:
;  131			if(n >= 214 && n < 221){e = 21; c = 1;}
	LD	BC,214
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__216
	JP	PE,L_113
	JR	L__217
L__216:
	JP	PO,L_113
L__217:
	LD	BC,221
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__218
	JP	PE,L_113
	JR	L__219
L__218:
	JP	PO,L_113
L__219:
	LD	BC,21
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_113:
;  132			if(n >= 221 && n < 228){e = 4; c = 249;}
	LD	BC,221
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__220
	JP	PE,L_116
	JR	L__221
L__220:
	JP	PO,L_116
L__221:
	LD	BC,228
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__222
	JP	PE,L_116
	JR	L__223
L__222:
	JP	PO,L_116
L__223:
	LD	BC,4
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_116:
;  133			if(n >= 228 && n < 235){e = 19; c = 1;}
	LD	BC,228
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__224
	JP	PE,L_119
	JR	L__225
L__224:
	JP	PO,L_119
L__225:
	LD	BC,235
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__226
	JP	PE,L_119
	JR	L__227
L__226:
	JP	PO,L_119
L__227:
	LD	BC,19
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_119:
;  134			if(n >= 235 && n < 242){e = 15; c = 249;}
	LD	BC,235
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__228
	JP	PE,L_122
	JR	L__229
L__228:
	JP	PO,L_122
L__229:
	LD	BC,242
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__230
	JP	PE,L_122
	JR	L__231
L__230:
	JP	PO,L_122
L__231:
	LD	BC,15
	LD	(_e),BC
	LD	BC,249
	LD	(_c),BC
L_122:
;  135			if(n >= 242 && n < 249){e = 32; c = 1;}
	LD	BC,242
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__232
	JP	PE,L_125
	JR	L__233
L__232:
	JP	PO,L_125
L__233:
	LD	BC,249
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	P,L__234
	JP	PE,L_125
	JR	L__235
L__234:
	JP	PO,L_125
L__235:
	LD	BC,32
	LD	(_e),BC
	LD	BC,1
	LD	(_c),BC
L_125:
;  136			if(n >= 249 && n <= 256){e = 0; c = 12;}
	LD	BC,249
	LD	HL,(_n)
	OR	A,A
	SBC	HL,BC
	JP	M,L__236
	JP	PE,L_126
	JR	L__237
L__236:
	JP	PO,L_126
L__237:
	LD	BC,(_n)
	LD	HL,256
	OR	A,A
	SBC	HL,BC
	JP	M,L__238
	JP	PE,L_126
	JR	L__239
L__238:
	JP	PO,L_126
L__239:
	LD	BC,0
	LD	(_e),BC
	LD	BC,12
	LD	(_c),BC
L_126:
;  137			/*Determine number*/
;  138		
;  139			gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;  140			gfx_FillScreen(9);//Green background
	LD	BC,9
	PUSH	BC
	CALL	_gfx_FillScreen
	POP	BC
;  141			gfx_SetTextFGColor(249);//Black text color
	LD	BC,249
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  142			gfx_SetTextBGColor(255);//Transparent text background
	LD	BC,255
	PUSH	BC
	CALL	_gfx_SetTextBGColor
	POP	BC
;  143			gfx_SetTextScale(1,1);//Text size for Title
	LD	BC,1
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  144			gfx_SetTextXY(110,10);//Title position
	LD	BC,10
	PUSH	BC
	LD	BC,110
	PUSH	BC
	CALL	_gfx_SetTextXY
	POP	BC
	POP	BC
;  145			gfx_PrintString("Roulette v0.1.1");//Print title
	LD	BC,L__87
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
;  146			gfx_SetTextXY(49,228);//Text position
	LD	BC,228
	PUSH	BC
	LD	BC,49
	PUSH	BC
	CALL	_gfx_SetTextXY
	POP	BC
	POP	BC
;  147			gfx_PrintString("Press 2nd to spin or Clear to exit");//Print text
	LD	BC,L__88
	PUSH	BC
	CALL	_gfx_PrintString
	POP	BC
;  148			gfx_SetTextScale(3,3);//Text size for number
	LD	BC,3
	PUSH	BC
	PUSH	BC
	CALL	_gfx_SetTextScale
	POP	BC
	POP	BC
;  149			gfx_SetTextXY(56,200);//number position
	LD	BC,200
	PUSH	BC
	LD	BC,56
	PUSH	BC
	CALL	_gfx_SetTextXY
	POP	BC
	POP	BC
;  150			gfx_SetTextFGColor(c);//Text color of number
	LD	A,(_c)
	LD	C,A
	LD	B,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  151			gfx_PrintInt(e,2);//Print number
	LD	BC,2
	PUSH	BC
	LD	BC,(_e)
	PUSH	BC
	CALL	_gfx_PrintInt
	POP	BC
	POP	BC
;  152		
;  153			gfx_RotateSprite(ro, rotate_sprite, n);//Rotate the sprite
	LD	A,(_n)
	LD	C,A
	LD	DE,64
	PUSH	DE
	LD	B,0
	PUSH	BC
	LD	BC,(_rotate_sprite)
	PUSH	BC
	LD	BC,_ro_data
	PUSH	BC
	CALL	_gfx_RotateScaleSprite
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  154			gfx_TransparentSprite_NoClip(rotate_sprite, 12, 64);//Show rotated sprite
	LD	BC,64
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,(_rotate_sprite)
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  155			gfx_TransparentSprite_NoClip(pfeil, 59, 36);//Show arrow
	LD	BC,36
	PUSH	BC
	LD	BC,59
	PUSH	BC
	LD	BC,_pfeil_data
	PUSH	BC
	CALL	_gfx_TransparentSprite_NoClip
	POP	BC
	POP	BC
	POP	BC
;  156			gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;  157		}
L_129:
	LD	HL,(IX+-7)
	INC	HL
	LD	(IX+-7),L
	LD	(IX+-6),H
	LD	HL,(IX+-7)
	CALL	__scmpzero
	JR	NZ,L_2
L_130:
;  158			
;  159	    gfx_End();// Close the graphics
	CALL	_gfx_End
;  160	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_gfx_End                            IMPORT  -----   function
;_gfx_PrintInt                       IMPORT  -----   function
;_c                                  STATIC      3   variable
;_e                                  STATIC      3   variable
;_n                                  STATIC      3   variable
;_rand                               IMPORT  -----   function
;_b                                  STATIC      2   variable
;_srand                              IMPORT  -----   function
;_gfx_SwapDraw                       IMPORT  -----   function
;_pfeil_data                         IMPORT   1026   variable
;_gfx_TransparentSprite_NoClip       IMPORT  -----   function
;_gfx_PrintString                    IMPORT  -----   function
;_gfx_SetTextXY                      IMPORT  -----   function
;_gfx_SetTextScale                   IMPORT  -----   function
;_gfx_SetTextBGColor                 IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_FillScreen                     IMPORT  -----   function
;_ro_data                            IMPORT  16386   variable
;_rotate_sprite                      STATIC      3   variable
;_a                                  STATIC      2   variable
;_gfx_RotateScaleSprite              IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_palette_gfx_pal                    IMPORT    500   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;r                                    IX-10      3   variable
;i                                     IX-7      2   variable
;G_0                                   IX-5      1   variable
;s                                     IX-4      2   variable
;x                                     IX-2      2   variable


; Stack Frame Size: 16 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__0:
	DB	"Roulette v0.1.1"
	DB	0
L__1:
	DB	"Press 2nd to spin or Clear to exit"
	DB	0
L__10:
	DB	"Roulette v0.1.1"
	DB	0
L__87:
	DB	"Roulette v0.1.1"
	DB	0
L__88:
	DB	"Press 2nd to spin or Clear to exit"
	DB	0
	XREF _palette_gfx_pal:ROM
	XREF _pfeil_data:ROM
	XREF _ro_data:ROM
	XREF _gfx_RotateScaleSprite:ROM
	XREF _gfx_TransparentSprite_NoClip:ROM
	XREF _gfx_SetTextBGColor:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_SetTextXY:ROM
	XREF _gfx_PrintString:ROM
	XREF _gfx_PrintInt:ROM
	XREF _gfx_SetTextScale:ROM
	XREF _gfx_SwapDraw:ROM
	XREF _gfx_SetDraw:ROM
	XREF _gfx_FillScreen:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XREF _rand:ROM
	XREF _srand:ROM
	XREF __idivs:ROM
	XREF __irems:ROM
	XREF __stoiu:ROM
	XREF __frameset:ROM
	XREF __scmpzero:ROM
	XDEF _main
	XDEF _key
	XDEF _prevkey
	XDEF _stop
	XDEF _c
	XDEF _e
	XDEF _keypressed
	XDEF _n
	XDEF _b
	XDEF _a
	XDEF _rotate_sprite
	XDEF _rotate_sprite_data
	END
