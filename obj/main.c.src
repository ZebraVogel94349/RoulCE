	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_createTableau
_createTableau:
	ld	hl, -25
	push	hl
	call	_gfx_SetColor
	ld	iy, _y
	pop	hl
	ld.sis	bc, 15
	ld.sis	de, 0
BB0_1:
	ld	(iy), e
	ld	(iy + 1), d
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	jq	nc, BB0_2
	ld.sis	hl, 41
	ld	iy, _j
	ld	(iy), l
	ld	(iy + 1), h
	ld	iyl, e
	ld	iyh, d
	ld.sis	bc, -5
	add.sis	iy, bc
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, 5
	or	a, a
	sbc.sis	hl, bc
	jq	nc, BB0_4
	ld	a, 27
	ld	b, iyl
	call	__bshru
	and	a, 1
	ld	l, 1
	xor	a, l
	bit	0, a
	ld	iy, 256
	jq	z, BB0_6
BB0_4:
	ld.sis	hl, 0
	ld	iy, _j
	ld	(iy), l
	ld	(iy + 1), h
	ld	iy, 215
BB0_6:
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	h, d
	ld	bc, 14
	call	__imulu
	add	hl, bc
	push	hl
	ld	de, 310
	push	de
	push	hl
	push	iy
	call	_gfx_Line
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	iy, _y
	ld	e, (iy)
	ld	d, (iy + 1)
	inc.sis	de
	ld.sis	bc, 15
	jq	BB0_1
BB0_2:
	ld.sis	de, 0
	ld	iy, _z
BB0_7:
	ld	(iy), e
	ld	(iy + 1), d
	ld	l, e
	ld	h, d
	ld.sis	bc, 6
	or	a, a
	sbc.sis	hl, bc
	jq	nc, BB0_11
	ld	l, e
	ld	h, d
	ld.sis	bc, 2
	or	a, a
	sbc.sis	hl, bc
	jq	nc, BB0_9
	jq	BB0_10
BB0_9:
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	h, d
	ld	bc, 18
	call	__imulu
	ld	de, 220
	add	hl, de
	ld	de, 210
	push	de
	push	hl
	ld	de, 14
	push	de
	push	hl
	call	_gfx_Line
	ld	iy, _z
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	e, (iy)
	ld	d, (iy + 1)
BB0_10:
	inc.sis	de
	jq	BB0_7
BB0_11:
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, -25
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 17
	push	hl
	ld	hl, 280
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 199
	push	hl
	ld	hl, 262
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.1
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 199
	push	hl
	ld	hl, 280
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.1
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 199
	push	hl
	ld	hl, 298
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.1
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 14
	push	hl
	ld	de, 41
	push	de
	push	hl
	ld	hl, 215
	push	hl
	call	_gfx_FillRectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 8
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 90
	ex	de, hl
	push	de
	ld	hl, 245
	push	hl
	push	de
	ld	hl, 225
	push	hl
	ld	hl, 75
	push	hl
	ld	hl, 235
	push	hl
	call	_gfx_FillTriangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, 90
	push	de
	ld	hl, 245
	push	hl
	push	de
	ld	hl, 225
	push	hl
	ld	hl, 105
	push	hl
	ld	hl, 235
	push	hl
	call	_gfx_FillTriangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -25
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 132
	ex	de, hl
	push	de
	ld	hl, 245
	push	hl
	push	de
	ld	hl, 225
	push	hl
	ld	hl, 117
	push	hl
	ld	hl, 235
	push	hl
	call	_gfx_FillTriangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, 132
	push	de
	ld	hl, 245
	push	hl
	push	de
	ld	hl, 225
	push	hl
	ld	hl, 147
	push	hl
	ld	hl, 235
	push	hl
	call	_gfx_FillTriangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 210
	push	hl
	ld	de, 215
	push	de
	ld	hl, 29
	push	hl
	push	de
	call	_gfx_Line
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 31
	push	hl
	ld	hl, 222
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.2
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 45
	push	hl
	ld	hl, 217
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.3
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 59
	push	hl
	ld	hl, 217
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.4
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 157
	push	hl
	ld	hl, 222
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.5
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 171
	push	hl
	ld	hl, 217
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.6
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 185
	push	hl
	ld	hl, 225
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.7
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 199
	push	hl
	ld	hl, 222
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.8
	push	hl
	call	_gfx_PrintString
	ld	iy, _y
	pop	hl
	ld	hl, _g
	ld.sis	de, 1
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld.sis	de, 12
	ld.sis	bc, 3
	ld.sis	hl, 0
BB0_12:
	ld	(iy), l
	ld	(iy + 1), h
	or	a, a
	sbc.sis	hl, de
	jq	nc, BB0_17
	ld.sis	de, 0
	ld	iy, _z
	lea	hl, iy + 0
BB0_14:
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	jq	nc, BB0_16
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	h, d
	ld	bc, 18
	call	__imulu
	push	hl
	pop	iy
	ld	de, 258
	add	iy, de
	ld	hl, _y
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	or	a, a
	sbc	hl, hl
	ld	l, e
	ld	h, d
	ld	bc, 14
	call	__imulu
	ld	de, 31
	add	hl, de
	push	hl
	push	iy
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, _g
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	hl, 2
	push	hl
	push	de
	call	_gfx_PrintInt
	ld.sis	bc, 3
	pop	hl
	pop	hl
	ld	iy, _g
	ld	l, (iy)
	ld	h, (iy + 1)
	inc.sis	hl
	ld	(iy), l
	ld	(iy + 1), h
	ld	iy, _z
	ld	e, (iy)
	ld	d, (iy + 1)
	inc.sis	de
	lea	hl, iy + 0
	jq	BB0_14
BB0_16:
	ld	iy, _y
	ld	l, (iy)
	ld	h, (iy + 1)
	inc.sis	hl
	ld.sis	de, 12
	jq	BB0_12
BB0_17:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_DrawTitle
_DrawTitle:
	ld	hl, -25
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, -1
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 10
	push	hl
	ld	hl, 110
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str.9
	push	hl
	call	_gfx_PrintString
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_DrawCursor
_DrawCursor:
	ld	hl, -5
	call	__frameset
	ld	hl, -30
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld.sis	hl, 0
	ld	e, l
	ld	d, h
	ld	iy, _h
	ld	(iy), e
	ld	(iy + 1), d
	ld	hl, _i
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	hl, _posx
	ld	c, (hl)
	inc	hl
	ld	b, (hl)
	ld.sis	de, 2
	ld	l, c
	ld	h, b
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB2_4
	ld.sis	de, 23
	ld	iy, 23
	ld	hl, _h
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld	hl, _posy
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	de, 5
	ld	(ix + -2), l
	ld	(ix + -1), h
	or	a, a
	sbc.sis	hl, de
	jq	z, BB2_3
	ld.sis	de, 8
	ld	l, (ix + -2)
	ld	h, (ix + -1)
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB2_5
BB2_3:
	ld.sis	de, 28
	ld	hl, 41
	ld	(ix + -5), hl
	ld	hl, _i
	ld	(hl), e
	inc	hl
	ld	(hl), d
	jq	BB2_6
BB2_4:
	ld	hl, _posy
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	(ix + -2), l
	ld	(ix + -1), h
	ld	de, 0
	push	de
	pop	iy
	ld	hl, 13
	ld	(ix + -5), hl
	jq	BB2_7
BB2_5:
	ld	hl, 13
	ld	(ix + -5), hl
BB2_6:
	ld	de, 0
BB2_7:
	ld	e, c
	ld	d, b
	push	de
	pop	hl
	ld	bc, 18
	call	__imulu
	ld	bc, 203
	add	hl, bc
	push	de
	pop	bc
	lea	de, iy + 0
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	l, (ix + -2)
	ld	h, (ix + -1)
	ld	c, l
	ld	b, h
	push	bc
	pop	hl
	ld	bc, 14
	call	__imulu
	inc	hl
	ld	bc, 17
	add	iy, bc
	ld	bc, (ix + -5)
	push	bc
	push	iy
	push	hl
	push	de
	call	_gfx_FillRectangle
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_PrintNumber
_PrintNumber:
	ld	bc, 56
	ld	hl, 200
	ld	iy, 50
	ld	de, 30
	push	de
	push	iy
	push	hl
	push	bc
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 3
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 200
	push	hl
	ld	hl, 56
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	a, (_c)
	ld	l, a
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (_e)
	ld	de, 2
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld.sis	de, 1
	ld	iy, _posx
	ld	bc, _posy
	ld	(iy), e
	ld	(iy + 1), d
	push	bc
	pop	hl
	ld	(hl), e
	inc	hl
	ld	(hl), d
	call	_gfx_Begin
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 464
	push	hl
	ld	hl, _palette_gfx
	push	hl
	call	_gfx_SetPalette
	pop	hl
	pop	hl
	pop	hl
	ld.sis	hl, 0
	ld	iy, _s
	ld	(iy), l
	ld	(iy + 1), h
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	bc, (_rotate_sprite)
	ld	a, (_a)
	ld	l, a
	ld	a, (_s)
	ld	e, a
	ld	a, l
	add	a, e
	ld	l, a
	ld	de, 64
	push	de
	push	hl
	push	bc
	ld	hl, _ro_data
	push	hl
	call	_gfx_RotateScaleSprite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 7
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_DrawTitle
	ld	hl, (_rotate_sprite)
	ld	de, 69
	push	de
	ld	de, 17
	push	de
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	ld	hl, 59
	push	hl
	ld	hl, _pfeil_data
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	call	_createTableau
	call	_gfx_SwapDraw
	ld	hl, 7
	push	hl
	call	_gfx_FillScreen
	ld	hl, -720878
	push	hl
	pop	iy
	pop	hl
BB4_1:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 64
	jq	z, BB4_7
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 32
	jq	z, BB4_7
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 220
	push	hl
	ld	hl, 105
	push	hl
	ld	hl, 10
	push	hl
	ld	hl, 210
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	call	_DrawTitle
	ld	iy, -720878
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 64
	jq	z, BB4_7
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 32
	jq	z, BB4_7
	call	_PrintNumber
	call	_DrawCursor
	call	_createTableau
	ld	hl, (_rotate_sprite)
	ld	de, 69
	push	de
	ld	de, 17
	push	de
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	ld	hl, 59
	push	hl
	ld	hl, _pfeil_data
	push	hl
	call	_gfx_TransparentSprite_NoClip
	ld	iy, -720878
	pop	hl
	pop	hl
	pop	hl
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 64
	jq	z, BB4_7
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 32
	jq	nz, BB4_17
BB4_7:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 64
	jq	z, BB4_57
	ld	hl, -851900
	push	hl
	pop	iy
	ld	hl, (iy)
	ld	a, (iy + 3)
	push	hl
	call	_srand
	pop	hl
	call	_DrawCursor
	call	_createTableau
	ld.sis	hl, -15536
	ld	iy, _b
	ld	(iy), l
	ld	(iy + 1), h
	call	_rand
	ld	bc, 256
	call	__irems
	ld	iy, _s
	ld	(iy), l
	ld	(iy + 1), h
	ld.sis	de, 0
	ld	hl, _f
	ld	(hl), e
	inc	hl
	ld	(hl), d
	ld.sis	bc, 1
BB4_9:
	or	a, a
	ld	l, e
	ld	h, d
	adc.sis	hl, bc
	ld	iy, _x
	ld	(iy), l
	ld	(iy + 1), h
	or	a, a
	ld	l, e
	ld	h, d
	adc.sis	hl, bc
	ld	hl, -720878
	jq	c, BB4_15
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 64
	jq	z, BB4_56
	call	_rand
	ld	bc, 1000
	call	__irems
	push	hl
	pop	de
	ld	hl, _b
	push	hl
	pop	iy
	ld	l, (iy)
	ld	h, (iy + 1)
	or	a, a
	sbc.sis	hl, de
	ld	e, l
	ld	d, h
	ld	(iy), e
	ld	(iy + 1), d
	ld	a, (_a)
	ld.sis	bc, 5000
	call	__sdivu
	add	a, l
	ld	c, a
	ld	(_a), a
	ld	l, e
	ld	h, d
	ld.sis	de, 2000
	or	a, a
	sbc.sis	hl, de
	jq	c, BB4_15
	ld	a, (_s)
	ld	l, a
	ld	a, c
	add	a, l
	ld	l, a
	ld	(_n), a
	ld	de, (_rotate_sprite)
	ld	bc, 64
	push	bc
	push	hl
	push	de
	ld	hl, _ro_data
	push	hl
	call	_gfx_RotateScaleSprite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	call	_DrawTitle
	ld	hl, (_rotate_sprite)
	ld	de, 69
	push	de
	ld	de, 17
	push	de
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	ld	hl, 59
	push	hl
	ld	hl, _pfeil_data
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
	ld	a, (_n)
	ld	b, a
	ld	c, 7
	call	__bdivu
	ld	bc, 0
	push	bc
	pop	de
	ld	e, a
	ld	hl, L___const.main.colors
	add	hl, de
	ld	a, (hl)
	push	bc
	pop	hl
	ld	l, a
	ld	(_c), hl
	ld	hl, L___const.main.numbers
	add	hl, de
	ld	a, (hl)
	push	bc
	pop	hl
	ld	l, a
	ld	(_e), hl
	call	_PrintNumber
	ld	hl, _x
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld.sis	bc, 1
	jq	BB4_9
BB4_15:
	ld	hl, _f
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	de, 1
	or	a, a
	sbc.sis	hl, de
	jq	z, BB4_57
	call	_DrawTitle
	ld	hl, (_rotate_sprite)
	ld	a, (_n)
	ld	e, a
	ld	bc, 64
	push	bc
	push	de
	push	hl
	ld	hl, _ro_data
	push	hl
	call	_gfx_RotateScaleSprite
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_rotate_sprite)
	ld	de, 69
	push	de
	ld	de, 17
	push	de
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 36
	push	hl
	ld	hl, 59
	push	hl
	ld	hl, _pfeil_data
	push	hl
	call	_gfx_TransparentSprite_NoClip
	pop	hl
	pop	hl
	pop	hl
	call	_DrawCursor
	call	_createTableau
	call	_gfx_SwapDraw
	ld	iy, -720878
	jq	BB4_1
BB4_17:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 8
	jq	nz, BB4_20
	ld	hl, _posy
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	ld.sis	bc, 2
	or	a, a
	sbc.sis	hl, bc
	jq	c, BB4_20
	dec.sis	de
	ld	hl, _posy
	ld	(hl), e
	inc	hl
	ld	(hl), d
BB4_20:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 1
	jq	nz, BB4_33
	ld	hl, _posx
	ld	c, (hl)
	inc	hl
	ld	b, (hl)
	ld	hl, _posy
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	iyl, e
	ld	iyh, d
	pop	de
	ld	l, c
	ld	h, b
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB4_25
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 4
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB4_25
	ld	hl, _posy
	ld.sis	de, 5
	jq	BB4_24
BB4_25:
	ld	l, c
	ld	h, b
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB4_28
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 5
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB4_28
	ld	hl, _posy
	ld.sis	de, 8
	jq	BB4_24
BB4_28:
	ld	l, c
	ld	h, b
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB4_31
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 8
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB4_31
	ld	hl, _posy
	ld.sis	de, 11
BB4_24:
	ld	(hl), e
	inc	hl
	ld	(hl), d
	jq	BB4_33
BB4_31:
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 14
	or	a, a
	sbc.sis	hl, de
	jq	nc, BB4_33
	inc.sis	iy
	ld	hl, _posy
	push	de
	ld	e, iyl
	ld	d, iyh
	ld	(hl), e
	inc	hl
	ld	(hl), d
	pop	de
BB4_33:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 2
	ld	iy, _posx
	jq	nz, BB4_36
	ld	e, (iy)
	ld	d, (iy + 1)
	ld	l, e
	ld	h, d
	ld.sis	bc, 3
	or	a, a
	sbc.sis	hl, bc
	jq	c, BB4_36
	dec.sis	de
	ld	(iy), e
	ld	(iy + 1), d
BB4_36:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	e, (iy)
	ld	d, (iy + 1)
	ld	a, l
	cp	a, 4
	jq	nz, BB4_41
	ld	l, e
	ld	h, d
	ld.sis	bc, 5
	or	a, a
	sbc.sis	hl, bc
	jq	nc, BB4_41
	inc.sis	de
	ld	(iy), e
	ld	(iy + 1), d
BB4_41:
	ld	hl, _posy
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	iyl, e
	ld	iyh, d
	pop	de
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, 1
	or	a, a
	sbc.sis	hl, bc
	jq	nz, BB4_46
	ld	l, e
	ld	h, d
	ld.sis	bc, 5
	or	a, a
	sbc.sis	hl, bc
	jq	z, BB4_44
	ld	l, e
	ld	h, d
	dec.sis	hl
	ld.sis	bc, 3
	or	a, a
	sbc.sis	hl, bc
	jq	nc, BB4_46
BB4_44:
	ld	hl, _posx
	ld.sis	de, 4
	ld	(hl), e
	inc	hl
	ld	(hl), d
BB4_46:
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, -2
	call	__sand
	ld.sis	bc, 6
	or	a, a
	sbc.sis	hl, bc
	jq	nz, BB4_48
	ld	l, e
	ld	h, d
	ld.sis	bc, 2
	or	a, a
	sbc.sis	hl, bc
	ld.sis	bc, 5
	jq	z, BB4_50
BB4_48:
	ld.sis	bc, -9
	add.sis	iy, bc
	ld	l, e
	ld	h, d
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	jq	nz, BB4_51
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	ld.sis	bc, 8
	jq	nc, BB4_51
BB4_50:
	ld	hl, _posy
	ld	(hl), c
	inc	hl
	ld	(hl), b
BB4_51:
	call	_gfx_SwapDraw
	ld.sis	hl, 0
	ld	iy, -720878
	lea	bc, iy + 0
BB4_52:
	ld	iy, _x
	ld	(iy), l
	ld	(iy + 1), h
	ld.sis	de, 121
	or	a, a
	sbc.sis	hl, de
	push	bc
	pop	iy
	jq	nc, BB4_1
	ld	hl, 7
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 100
	push	hl
	ld	de, 20
	push	de
	push	hl
	ld	hl, 150
	push	hl
	call	_gfx_FillRectangle
	ld	iy, -720878
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 32
	jq	z, BB4_1
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	cp	a, 64
	jq	z, BB4_1
	lea	bc, iy + 0
	ld	hl, _x
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	inc.sis	hl
	jq	BB4_52
BB4_56:
	ld.sis	hl, 1
	ld	iy, _f
	ld	(iy), l
	ld	(iy + 1), h
BB4_57:
	jp	_gfx_End
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_rotate_sprite_data
_rotate_sprite_data:
	rb	13691

	section	.data,"aw",@progbits
	public	_rotate_sprite
_rotate_sprite:
	dl	_rotate_sprite_data

	section	.bss,"aw",@nobits
	public	_y
_y:
	rb	2

	section	.bss,"aw",@nobits
	public	_j
_j:
	rb	2

	section	.bss,"aw",@nobits
	public	_z
_z:
	rb	2

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"0",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"^",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"1-12",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"13-24",000o

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"25-36",000o

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"1-18",000o

	section	.rodata,"a",@progbits
	private	L_.str.6
L_.str.6:
	db	"19-36",000o

	section	.rodata,"a",@progbits
	private	L_.str.7
L_.str.7:
	db	"ODD",000o

	section	.rodata,"a",@progbits
	private	L_.str.8
L_.str.8:
	db	"EVEN",000o

	section	.bss,"aw",@nobits
	public	_g
_g:
	rb	2

	section	.rodata,"a",@progbits
	private	L_.str.9
L_.str.9:
	db	"Roulette v0.2.1",000o

	section	.bss,"aw",@nobits
	public	_h
_h:
	rb	2

	section	.bss,"aw",@nobits
	public	_i
_i:
	rb	2

	section	.bss,"aw",@nobits
	public	_posx
_posx:
	rb	2

	section	.bss,"aw",@nobits
	public	_posy
_posy:
	rb	2

	section	.bss,"aw",@nobits
	public	_c
_c:
	rb	3

	section	.bss,"aw",@nobits
	public	_e
_e:
	rb	3

	section	.rodata,"a",@progbits
	private	L___const.main.colors
L___const.main.colors:
	db	"",347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,347o,010o,013o

	section	.rodata,"a",@progbits
	private	L___const.main.numbers
L___const.main.numbers:
	db	"",032o,003o,"#",014o,034o,007o,035o,022o,026o,011o,037o,016o,024o,001o,"!",020o,030o,005o,012o,027o,010o,036o,013o,"$",015o,033o,006o,"""",021o,031o,002o,025o,004o,023o,017o," ",000o

	section	.bss,"aw",@nobits
	public	_s
_s:
	rb	2

	section	.bss,"aw",@nobits
	public	_a
_a:
	rb	1

	section	.bss,"aw",@nobits
	public	_x
_x:
	rb	2

	section	.bss,"aw",@nobits
	public	_b
_b:
	rb	2

	section	.bss,"aw",@nobits
	public	_f
_f:
	rb	2

	section	.bss,"aw",@nobits
	public	_n
_n:
	rb	1

	section	.bss,"aw",@nobits
	public	_key
_key:
	rb	1

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_srand
	extern	_gfx_SetTextBGColor
	extern	_gfx_SetTextFGColor
	extern	_gfx_FillRectangle_NoClip
	extern	_gfx_Begin
	extern	_gfx_Line
	extern	_gfx_RotateScaleSprite
	extern	_palette_gfx
	extern	_gfx_SetPalette
	extern	_rand
	extern	__sand
	extern	_gfx_PrintString
	extern	_gfx_SwapDraw
	extern	_gfx_PrintInt
	extern	_gfx_SetDraw
	extern	_gfx_FillTriangle
	extern	_pfeil_data
	extern	__sdivu
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	__irems
	extern	_gfx_FillRectangle
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_TransparentSprite_NoClip
	extern	_gfx_End
	extern	__bshru
	extern	_gfx_SetTextXY
	extern	_ro_data
	extern	__bdivu
	extern	_gfx_SetTextScale
